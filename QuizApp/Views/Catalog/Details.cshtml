@model QuizApp.Models.ViewModels.CatalogDetailsViewModel
@{
    ViewData["Title"] = "Kataloq Detalları";
}

<style>
    .catalog-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 30px;
        border-radius: 10px;
        margin-bottom: 30px;
    }

    .stats-row {
        display: flex;
        gap: 15px;
        margin-top: 20px;
        flex-wrap: wrap;
    }

    .stat-card {
        background: rgba(255, 255, 255, 0.2);
        padding: 15px 20px;
        border-radius: 8px;
        backdrop-filter: blur(10px);
    }

    .stat-number {
        font-size: 28px;
        font-weight: 700;
        margin-bottom: 5px;
    }

    .stat-label {
        font-size: 14px;
        opacity: 0.9;
    }

    .question-card {
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        padding: 20px;
        margin-bottom: 20px;
        transition: transform 0.2s;
        position: relative;
    }

        .question-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        }

    .difficulty-badge {
        position: absolute;
        top: 15px;
        right: 15px;
        padding: 6px 16px;
        border-radius: 20px;
        font-size: 13px;
        font-weight: 700;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

        .difficulty-badge.easy {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            color: white;
        }

        .difficulty-badge.medium {
            background: linear-gradient(135deg, #ffc107 0%, #ff9800 100%);
            color: white;
        }

        .difficulty-badge.hard {
            background: linear-gradient(135deg, #dc3545 0%, #c82333 100%);
            color: white;
        }

    .question-text {
        font-size: 18px;
        font-weight: 600;
        color: #333;
        margin-bottom: 15px;
        padding-right: 100px;
    }

    .question-image {
        max-width: 100%;
        max-height: 300px;
        border-radius: 8px;
        margin: 15px 0;
    }

    .answers-section {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-top: 15px;
    }

    .answer-item {
        padding: 8px 12px;
        margin: 5px 0;
        border-radius: 5px;
        background-color: white;
        border-left: 4px solid #dee2e6;
    }

        .answer-item.correct {
            border-left-color: #28a745;
            background-color: #d4edda;
        }

    .answer-text {
        font-size: 15px;
    }

    .correct-badge {
        background-color: #28a745;
        color: white;
        padding: 3px 10px;
        border-radius: 12px;
        font-size: 12px;
        margin-left: 10px;
    }

    .action-buttons {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .btn-edit {
        background-color: #007bff;
        border-color: #007bff;
        color: white;
    }

        .btn-edit:hover {
            background-color: #0056b3;
            color: white;
        }

    .btn-delete {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

        .btn-delete:hover {
            background-color: #c82333;
            color: white;
        }

    .filter-buttons {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
        flex-wrap: wrap;
    }

    .filter-btn {
        padding: 8px 20px;
        border: 2px solid;
        border-radius: 20px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        background: white;
    }

        .filter-btn.all {
            border-color: #6c757d;
            color: #6c757d;
        }

            .filter-btn.all:hover,
            .filter-btn.all.active {
                background: #6c757d;
                color: white;
            }

        .filter-btn.easy {
            border-color: #28a745;
            color: #28a745;
        }

            .filter-btn.easy:hover,
            .filter-btn.easy.active {
                background: #28a745;
                color: white;
            }

        .filter-btn.medium {
            border-color: #ffc107;
            color: #ffc107;
        }

            .filter-btn.medium:hover,
            .filter-btn.medium.active {
                background: #ffc107;
                color: white;
            }

        .filter-btn.hard {
            border-color: #dc3545;
            color: #dc3545;
        }

            .filter-btn.hard:hover,
            .filter-btn.hard.active {
                background: #dc3545;
                color: white;
            }
</style>

<div class="container mt-4">
    <div class="catalog-header">
        <h2>@Model.Catalog.Title</h2>
        <p class="mb-0">Bu kataloqda @(Model.Questions?.Count ?? 0) sual mövcuddur</p>

        <div class="stats-row">
            <div class="stat-card">
                <div class="stat-number">@(Model.Questions?.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Easy) ?? 0)</div>
                <div class="stat-label">Asan Suallar</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Questions?.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Medium) ?? 0)</div>
                <div class="stat-label">Orta Suallar</div>
            </div>
            <div class="stat-card">
                <div class="stat-number">@(Model.Questions?.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Hard) ?? 0)</div>
                <div class="stat-label">Çətin Suallar</div>
            </div>
        </div>

        <div class="mt-3">
            <a asp-action="Edit" asp-route-id="@Model.Catalog.Id" class="btn btn-light btn-sm">
                Kataloqu Redaktə Et
            </a>
            <a asp-action="Index" class="btn btn-outline-light btn-sm">
                Geri
            </a>
        </div>
    </div>

    @if (Model.Questions != null && Model.Questions.Any())
    {
        <div class="filter-buttons">
            <button class="filter-btn all active" onclick="filterQuestions('all')">
                Hamısı (@Model.Questions.Count)
            </button>
            <button class="filter-btn easy" onclick="filterQuestions('easy')">
                Asan (@Model.Questions.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Easy))
            </button>
            <button class="filter-btn medium" onclick="filterQuestions('medium')">
                Orta (@Model.Questions.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Medium))
            </button>
            <button class="filter-btn hard" onclick="filterQuestions('hard')">
                Çətin (@Model.Questions.Count(q => q.Difficulty == QuizApp.Models.QuestionDifficulty.Hard))
            </button>
        </div>

        <h3 class="mb-4">Suallar</h3>

        @foreach (var question in Model.Questions)
        {
            var difficultyClass = question.Difficulty == QuizApp.Models.QuestionDifficulty.Easy ? "easy" :
                                 question.Difficulty == QuizApp.Models.QuestionDifficulty.Medium ? "medium" : "hard";
            var difficultyText = question.Difficulty == QuizApp.Models.QuestionDifficulty.Easy ? "Asan" :
                                question.Difficulty == QuizApp.Models.QuestionDifficulty.Medium ? "Orta" : "Çətin";

            <div class="question-card" data-difficulty="@difficultyClass">
                <span class="difficulty-badge @difficultyClass">@difficultyText</span>

                <div class="question-text">
                    @question.Text
                </div>

                @if (!string.IsNullOrEmpty(question.ImageUrl))
                {
                    <div>
                        <img src="@question.ImageUrl" alt="Sual Şəkili" class="question-image" />
                    </div>
                }

                @if (question.Answers != null && question.Answers.Any())
                {
                    <div class="answers-section">
                        <strong>Cavablar:</strong>
                        @foreach (var answer in question.Answers)
                        {
                            <div class="answer-item @(answer.IsCorrect ? "correct" : "")">
                                <span class="answer-text">@answer.Text</span>
                                @if (answer.IsCorrect)
                                {
                                    <span class="correct-badge">Doğru</span>
                                }
                            </div>
                        }
                    </div>
                }

                <div class="action-buttons">
                    <a asp-controller="Quiz" asp-action="EditQuestion" asp-route-id="@question.Id"
                       class="btn btn-edit btn-sm">
                        Redaktə Et
                    </a>
                    <form asp-controller="Quiz" asp-action="DeleteQuestion" asp-route-id="@question.Id"
                          method="post" style="display: inline;"
                          onsubmit="return confirm('Bu sualı silmək istədiyinizdən əminsiniz?');">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-delete btn-sm">
                            Sil
                        </button>
                    </form>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-info">
            <strong>Məlumat:</strong> Bu kataloqda heç bir sual mövcud deyil.
            <a asp-controller="Quiz" asp-action="CreateQuestions" class="alert-link">
                İlk sualı əlavə edin
            </a>
        </div>
    }
</div>

<script>function filterQuestions(difficulty) {
        const cards = document.querySelectorAll('.question-card');
        const buttons = document.querySelectorAll('.filter-btn');

        buttons.forEach(btn => btn.classList.remove('active'));
        event.target.classList.add('active');

        cards.forEach(card => {
            if (difficulty === 'all') {
                card.style.display = 'block';
            } else {
                if (card.dataset.difficulty === difficulty) {
                    card.style.display = 'block';
                } else {
                    card.style.display = 'none';
                }
            }
        });
    }</script>