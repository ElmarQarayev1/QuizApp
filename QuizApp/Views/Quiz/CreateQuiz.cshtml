@model QuizApp.Models.ViewModels.QuizCreateViewModel

<style>
    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        font-size: 2.2rem;
        font-weight: 800;
        text-align: center;
        margin-bottom: 35px;
    }

    .quiz-form-card {
        background: white;
        border-radius: 20px;
        padding: 35px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.08);
        margin-bottom: 30px;
    }

    .form-group {
        margin-bottom: 25px;
    }

    .form-label {
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 10px;
        font-size: 1rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .form-control, .catalogSelect {
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        padding: 12px 18px;
        font-size: 0.95rem;
        transition: all 0.3s ease;
        background: #f7fafc;
        font-weight: 500;
    }

    .form-control:focus, .catalogSelect:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        background: white;
        outline: none;
    }

    .catalog-group {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 20px;
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
    }

    .catalog-group:hover {
        border-color: #667eea;
        box-shadow: 0 5px 20px rgba(102, 126, 234, 0.1);
    }

    .questionsContainer {
        margin-top: 20px;
        background: white;
        border-radius: 12px;
        padding: 20px;
    }

    .question-item {
        display: flex;
        align-items: center;
        gap: 15px;
        padding: 15px;
        border: 2px solid #e2e8f0;
        border-radius: 12px;
        margin-bottom: 12px;
        transition: all 0.3s ease;
        background: white;
    }

    .question-item:hover {
        border-color: #667eea;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.1);
        transform: translateX(5px);
    }

    .form-check-input {
        width: 20px;
        height: 20px;
        border: 2px solid #cbd5e0;
        border-radius: 6px;
        cursor: pointer;
    }

    .form-check-input:checked {
        background-color: #667eea;
        border-color: #667eea;
    }

    .form-check-label {
        flex: 1;
        font-weight: 500;
        color: #2d3748;
        cursor: pointer;
    }

    .question-image {
        max-width: 80px;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .btn-modern {
        border: none;
        padding: 14px 28px;
        border-radius: 12px;
        font-weight: 700;
        font-size: 1rem;
        transition: all 0.3s ease;
        cursor: pointer;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        justify-content: center;
    }

    .btn-add-catalog {
        background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
        color: white;
        width: 100%;
        box-shadow: 0 4px 15px rgba(245, 87, 108, 0.3);
    }

    .btn-add-catalog:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(245, 87, 108, 0.4);
    }

    .btn-submit {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        width: 100%;
        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
    }

    .btn-submit:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);
    }

    .btn-back {
        background: white;
        color: #4a5568;
        border: 2px solid #e2e8f0;
        width: 100%;
    }

    .btn-back:hover {
        background: #f7fafc;
        border-color: #cbd5e0;
    }

    .button-group {
        display: flex;
        gap: 15px;
        margin-top: 30px;
    }

    .text-danger {
        color: #f56565;
        font-size: 0.85rem;
        margin-top: 5px;
    }

    .empty-message {
        text-align: center;
        color: #a0aec0;
        padding: 20px;
        font-style: italic;
    }

    @@media (max-width: 768px) {
        .button-group {
            flex-direction: column;
        }
    }
</style>

<h2 class="page-header">Yeni İmtahan Yarat</h2>

<div class="quiz-form-card">
    <form asp-action="CreateQuiz" method="post" id="quizForm">
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label asp-for="Title" class="form-label">
                📚 İmtahan Başlığı
            </label>
            <input asp-for="Title" class="form-control" placeholder="Məsələn: Riyaziyyat Test 1" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="DurationInMinutes" class="form-label">
                ⏱️ Müddət (dəqiqə)
            </label>
            <input asp-for="DurationInMinutes" class="form-control" type="number" min="1" max="180" placeholder="45" />
            <span asp-validation-for="DurationInMinutes" class="text-danger"></span>
        </div>

        <div id="catalogsContainer">
            <div class="form-group catalog-group">
                <label class="form-label">🗂️ Kataloq Seçin</label>
                <select class="form-control catalogSelect">
                    <option value="">-- Kataloq seçin --</option>
                    @foreach (var catalog in Model.ExistingCatalogs)
                    {
                        <option value="@catalog.Value">@catalog.Text</option>
                    }
                </select>

                <div class="questionsContainer" style="display:none;">
                    <label class="form-label">📝 Sualları Seçin</label>
                    <div class="questionsList"></div>
                </div>
            </div>
        </div>

        <button type="button" class="btn-modern btn-add-catalog" id="addCatalogButton">
            ➕ Yeni Kataloq Əlavə Et
        </button>

        <div class="button-group">
            <button type="submit" class="btn-modern btn-submit">
                🚀 İmtahan Yarat
            </button>
            <a asp-action="Index" class="btn-modern btn-back">
                ↩️ Geri Dön
            </a>
        </div>
    </form>
</div>

<script>
    let selectedQuestions = [];
    const existingCatalogs = @Html.Raw(Json.Serialize(Model.ExistingCatalogs));

    document.addEventListener("DOMContentLoaded", function () {
        attachCatalogChangeListeners();
    });

    function attachCatalogChangeListeners() {
        document.querySelectorAll(".catalogSelect").forEach(select => {
            select.addEventListener("change", function () {
                const catalogId = this.value;
                const container = this.closest('.catalog-group').querySelector('.questionsContainer');
                const list = container.querySelector('.questionsList');

                if (!catalogId) {
                    container.style.display = "none";
                    list.innerHTML = "";
                    return;
                }

                fetch(`/Quiz/GetQuestionsByCatalogId?catalogId=${catalogId}`)
                    .then(response => response.json())
                    .then(data => {
                        list.innerHTML = "";
                        if (data && data.length > 0) {
                            data.forEach(q => {
                                if (!selectedQuestions.includes(q.id)) {
                                    const checkbox = document.createElement("input");
                                    checkbox.type = "checkbox";
                                    checkbox.className = "form-check-input";
                                    checkbox.name = "SelectedQuestionIds[]";
                                    checkbox.value = q.id;
                                    checkbox.id = `question_${q.id}_${Date.now()}`;
                                    checkbox.onclick = function () {
                                        if (checkbox.checked) {
                                            selectedQuestions.push(q.id);
                                        } else {
                                            selectedQuestions = selectedQuestions.filter(id => id !== q.id);
                                        }
                                    };

                                    const label = document.createElement("label");
                                    label.className = "form-check-label";
                                    label.setAttribute("for", checkbox.id);
                                    label.innerText = q.text;

                                    const questionImageContainer = document.createElement("div");
                                    if (q.image) {
                                        const image = document.createElement("img");
                                        image.src = q.image;
                                        image.alt = "Sual Şəkili";
                                        image.className = "question-image";
                                        questionImageContainer.appendChild(image);
                                    }

                                    const div = document.createElement("div");
                                    div.className = "question-item";
                                    div.appendChild(checkbox);
                                    div.appendChild(label);
                                    div.appendChild(questionImageContainer);

                                    list.appendChild(div);
                                }
                            });
                            container.style.display = "block";
                        } else {
                            list.innerHTML = "<p class='empty-message'>Bu kataloq üçün heç bir sual tapılmadı.</p>";
                            container.style.display = "block";
                        }
                    });
            });
        });
    }

    document.getElementById("addCatalogButton").addEventListener("click", function () {
        const catalogsContainer = document.getElementById("catalogsContainer");
        const newCatalogGroup = document.createElement("div");
        newCatalogGroup.classList.add("form-group", "catalog-group");

        const label = document.createElement("label");
        label.className = "form-label";
        label.textContent = "🗂️ Kataloq Seçin";

        const select = document.createElement("select");
        select.classList.add("form-control", "catalogSelect");

        const defaultOption = document.createElement("option");
        defaultOption.value = "";
        defaultOption.text = "-- Kataloq seçin --";
        select.appendChild(defaultOption);

        existingCatalogs.forEach(catalog => {
            const option = document.createElement("option");
            option.value = catalog.value;
            option.text = catalog.text;
            select.appendChild(option);
        });

        const questionsContainer = document.createElement("div");
        questionsContainer.classList.add("questionsContainer");
        questionsContainer.style.display = "none";

        const questionsLabel = document.createElement("label");
        questionsLabel.className = "form-label";
        questionsLabel.textContent = "📝 Sualları Seçin";

        const questionsList = document.createElement("div");
        questionsList.classList.add("questionsList");

        questionsContainer.appendChild(questionsLabel);
        questionsContainer.appendChild(questionsList);

        newCatalogGroup.appendChild(label);
        newCatalogGroup.appendChild(select);
        newCatalogGroup.appendChild(questionsContainer);
        catalogsContainer.appendChild(newCatalogGroup);

        attachCatalogChangeListeners();
    });
</script>